{"version":3,"sources":["Components/Item/Item.js","Components/AddItem/AddItem.js","Components/List/List.js","Components/Hero/Hero.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["Item","props","useState","checked","setChecked","useEffect","onUpdate","htmlFor","id","className","type","defaultChecked","onChange","text","icon","faTrash","onClick","e","preventDefault","onDelete","AddItem","localAddChecked","JSON","parse","localStorage","getItem","localAddText","setText","setItem","placeholder","name","value","onInput","target","length","trim","onKeyDown","key","submitItem","List","localItems","items","setItems","itemUpdate","item","index","findIndex","i","deleteItem","splice","stringify","map","lastId","reduce","prev","current","y","Hero","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77d1c096.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"./Item.scss\";\r\n\r\nfunction Item(props) {\r\n  const [checked, setChecked] = useState(props.checked);\r\n\r\n  function toggleItem() {\r\n    setChecked(!checked);\r\n  }\r\n\r\n  function deleteItem(e) {\r\n    e.preventDefault();\r\n    props.onDelete();\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.onUpdate({ ...props, checked });\r\n    // props.onUpdate({ id: props.id, checked: checked, text: props.text });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [checked]);\r\n\r\n  return (\r\n    <label htmlFor={props.id} className=\"todo-item\">\r\n      <div className=\"todo-item-checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={checked}\r\n          onChange={toggleItem}\r\n          id={props.id}\r\n        />\r\n        <span className=\"checkmark\"></span>\r\n      </div>\r\n      <div className=\"todo-item-text\">{props.text}</div>\r\n      <div className=\"todo-item-delete\">\r\n        <div>\r\n          <FontAwesomeIcon icon={faTrash} onClick={deleteItem} />\r\n        </div>\r\n      </div>\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport \"./AddItem.scss\";\r\n\r\nfunction AddItem(props) {\r\n  const localAddChecked = JSON.parse(localStorage.getItem(\"addInputChecked\"));\r\n  const localAddText = localStorage.getItem(\"addInputText\");\r\n  const [checked, setChecked] = useState(\r\n    localAddChecked !== null ? localAddChecked : false\r\n  );\r\n  const [text, setText] = useState(localAddText ? localAddText : \"\");\r\n\r\n  function toggleItem() {\r\n    setChecked(!checked);\r\n  }\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"addInputChecked\", checked);\r\n  }, [checked]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"addInputText\", text);\r\n  }, [text]);\r\n\r\n  function submitItem(e) {\r\n    if (e.key === \"Enter\" && text.trim().length > 0) {\r\n      props.submitItem({ checked, text: text.trim() });\r\n      setText(\"\");\r\n      setChecked(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div htmlFor={\"x\"} className=\"add-todo-item\">\r\n      <label>\r\n        <div className=\"add-todo-item-checkbox\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={checked}\r\n            onChange={toggleItem}\r\n            id={\"x\"}\r\n          />\r\n          <span className=\"checkmark\"></span>\r\n        </div>\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        className=\"add-todo-item-text\"\r\n        placeholder=\"add an item...\"\r\n        name=\"x\"\r\n        id=\"x\"\r\n        value={text}\r\n        onInput={(e) =>\r\n          e.target.value.length > 1\r\n            ? setText(e.target.value)\r\n            : setText(e.target.value.trim())\r\n        }\r\n        onKeyDown={submitItem}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddItem;\r\n","import Item from \"../Item/Item\";\r\nimport \"./List.scss\";\r\nimport AddItem from \"../AddItem/AddItem\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction List() {\r\n  const localItems = JSON.parse(localStorage.getItem(\"items\"));\r\n  const [items, setItems] = useState(localItems ? localItems : []);\r\n\r\n  function addItem(item) {\r\n    const lastId = items.reduce(\r\n      (prev, current) => (prev.y > current.y ? prev : current).id,\r\n      -1\r\n    );\r\n    setItems([\r\n      ...items,\r\n      {\r\n        id: lastId + 1,\r\n        text: item.text,\r\n        checked: item.checked,\r\n      },\r\n    ]);\r\n  }\r\n\r\n  function itemUpdate(item) {\r\n    let index = items.findIndex((i) => i.id === item.id);\r\n    items[index] = item;\r\n    setItems([...items]);\r\n  }\r\n\r\n  function deleteItem() {\r\n    let index = items.findIndex((i) => i.id === this.id);\r\n    if (index > -1) {\r\n      items.splice(index, 1);\r\n    }\r\n    setItems([...items]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"items\", JSON.stringify(items));\r\n  }, [items]);\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      {items.map((item) => (\r\n        <Item\r\n          key={item.id}\r\n          id={item.id}\r\n          text={item.text}\r\n          checked={item.checked}\r\n          onUpdate={itemUpdate}\r\n          onDelete={deleteItem}\r\n        />\r\n      ))}\r\n      <AddItem submitItem={addItem} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import \"./Hero.scss\";\r\n\r\nfunction Hero() {\r\n  return (\r\n    <div className=\"hero-container\">\r\n      <h1>todo üìù</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Hero;\r\n","import \"./App.css\";\r\nimport List from \"../List/List\";\r\nimport Hero from \"../Hero/Hero\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Hero />\r\n      <List />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./Components/App/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}