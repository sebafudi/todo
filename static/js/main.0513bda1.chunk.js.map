{"version":3,"sources":["Components/Item/Item.js","Components/AddItem/AddItem.js","Components/List/List.js","Components/Hero/Hero.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["Item","props","localChecked","JSON","parse","localStorage","getItem","id","useState","checked","setChecked","useEffect","setItem","htmlFor","className","type","defaultChecked","onChange","text","AddItem","localAddChecked","localAddText","setText","placeholder","name","value","onInput","e","target","onKeyDown","key","submitItem","List","localItems","items","setItems","stringify","map","item","lastId","length","sort","a","b","Hero","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAkCeA,MA9Bf,SAAcC,GACZ,IAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,YAAcL,EAAMM,KADtD,EAEWC,mBACX,OAAjBN,EAAwBA,IAAeD,EAAMQ,SAH5B,mBAEZA,EAFY,KAEHC,EAFG,KAcnB,OAJAC,qBAAU,WACRN,aAAaO,QAAQ,YAAcX,EAAMM,GAAIE,KAC5C,CAACA,EAASR,EAAMM,KAGjB,wBAAOM,QAASZ,EAAMM,GAAIO,UAAU,YAApC,UACE,sBAAKA,UAAU,qBAAf,UACE,uBACEC,KAAK,WACLC,eAAgBP,EAChBQ,SAdR,WACEP,GAAYD,IAcNF,GAAIN,EAAMM,KAEZ,sBAAMO,UAAU,iBAElB,qBAAKA,UAAU,iBAAf,SAAiCb,EAAMiB,W,YC8B9BC,MAvDf,SAAiBlB,GACf,IAAMmB,EAAkBjB,KAAKC,MAAMC,aAAaC,QAAQ,oBAClDe,EAAehB,aAAaC,QAAQ,gBAFpB,EAGQE,mBACR,OAApBY,GAA2BA,GAJP,mBAGfX,EAHe,KAGNC,EAHM,OAMEF,mBAASa,GAA8B,IANzC,mBAMfH,EANe,KAMTI,EANS,KA4BtB,OAhBAX,qBAAU,WACRN,aAAaO,QAAQ,kBAAmBH,KACvC,CAACA,IAEJE,qBAAU,WACRN,aAAaO,QAAQ,eAAgBM,KACpC,CAACA,IAWF,sBAAKL,QAAS,IAAKC,UAAU,gBAA7B,UACE,gCACE,sBAAKA,UAAU,yBAAf,UACE,uBACEC,KAAK,WACLN,QAASA,EACTQ,SA3BV,WACEP,GAAYD,IA2BJF,GAAI,MAEN,sBAAMO,UAAU,mBAGpB,uBACEC,KAAK,OACLD,UAAU,qBACVS,YAAY,cACZC,KAAK,IACLjB,GAAG,IACHkB,MAAOP,EACPQ,QAAS,SAACC,GAAD,OAAOL,EAAQK,EAAEC,OAAOH,QACjCI,UA7BN,SAAoBF,GACJ,UAAVA,EAAEG,MACJ7B,EAAM8B,WAAW,CAAEtB,UAASS,SAC5BI,EAAQ,IACRZ,GAAW,WCSFsB,MAhCf,WACE,IAAMC,EAAa9B,KAAKC,MAAMC,aAAaC,QAAQ,UADrC,EAEYE,mBAASyB,GAA0B,IAF/C,mBAEPC,EAFO,KAEAC,EAFA,KAiBd,OAHAxB,qBAAU,WACRN,aAAaO,QAAQ,QAAST,KAAKiC,UAAUF,MAC5C,CAACA,IAEF,sBAAKpB,UAAU,YAAf,UACGoB,EAAMG,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CAEE/B,GAAI+B,EAAK/B,GACTW,KAAMoB,EAAKpB,KACXT,QAAS6B,EAAK7B,SAHT6B,EAAK/B,OAMd,cAAC,EAAD,CAASwB,WAxBb,SAAiBO,GACf,IAAIC,EAASL,EAAMM,OAAS,EAAIN,EAAMO,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEpC,GAAKmC,EAAEnC,MAAI,GAAGA,GAAK,EAC1E4B,EAAS,GAAD,mBACHD,GADG,CAEN,CACE3B,GAAIgC,EAAS,EACbrB,KAAMoB,EAAKpB,KACXT,QAAS6B,EAAK7B,mB,MCLPmC,MARf,WACE,OACE,qBAAK9B,UAAU,iBAAf,SACE,sDCQS+B,MATf,WACE,OACE,sBAAK/B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISgC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0513bda1.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport \"./Item.scss\";\r\n\r\nfunction Item(props) {\r\n  const localChecked = JSON.parse(localStorage.getItem(\"todo-item\" + props.id));\r\n  const [checked, setChecked] = useState(\r\n    localChecked !== null ? localChecked : props.checked ? true : false\r\n  );\r\n\r\n  function toggleItem() {\r\n    setChecked(!checked);\r\n  }\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todo-item\" + props.id, checked);\r\n  }, [checked, props.id]);\r\n\r\n  return (\r\n    <label htmlFor={props.id} className=\"todo-item\">\r\n      <div className=\"todo-item-checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={checked}\r\n          onChange={toggleItem}\r\n          id={props.id}\r\n        />\r\n        <span className=\"checkmark\"></span>\r\n      </div>\r\n      <div className=\"todo-item-text\">{props.text}</div>\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport \"./AddItem.scss\";\r\n\r\nfunction AddItem(props) {\r\n  const localAddChecked = JSON.parse(localStorage.getItem(\"addInputChecked\"));\r\n  const localAddText = localStorage.getItem(\"addInputText\");\r\n  const [checked, setChecked] = useState(\r\n    localAddChecked !== null ? localAddChecked : false\r\n  );\r\n  const [text, setText] = useState(localAddText ? localAddText : \"\");\r\n\r\n  function toggleItem() {\r\n    setChecked(!checked);\r\n  }\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"addInputChecked\", checked);\r\n  }, [checked]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"addInputText\", text);\r\n  }, [text]);\r\n\r\n  function submitItem(e) {\r\n    if (e.key === \"Enter\") {\r\n      props.submitItem({ checked, text });\r\n      setText(\"\");\r\n      setChecked(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div htmlFor={\"x\"} className=\"add-todo-item\">\r\n      <label>\r\n        <div className=\"add-todo-item-checkbox\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={checked}\r\n            onChange={toggleItem}\r\n            id={\"x\"}\r\n          />\r\n          <span className=\"checkmark\"></span>\r\n        </div>\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        className=\"add-todo-item-text\"\r\n        placeholder=\"add item...\"\r\n        name=\"x\"\r\n        id=\"x\"\r\n        value={text}\r\n        onInput={(e) => setText(e.target.value)}\r\n        onKeyDown={submitItem}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddItem;\r\n","import Item from \"../Item/Item\";\r\nimport \"./List.scss\";\r\nimport AddItem from \"../AddItem/AddItem\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction List() {\r\n  const localItems = JSON.parse(localStorage.getItem(\"items\"));\r\n  const [items, setItems] = useState(localItems ? localItems : []);\r\n  function addItem(item) {\r\n    let lastId = items.length > 0 ? items.sort((a, b) => b.id - a.id)[0].id : 0;\r\n    setItems([\r\n      ...items,\r\n      {\r\n        id: lastId + 1,\r\n        text: item.text,\r\n        checked: item.checked,\r\n      },\r\n    ]);\r\n  }\r\n  useEffect(() => {\r\n    localStorage.setItem(\"items\", JSON.stringify(items));\r\n  }, [items]);\r\n  return (\r\n    <div className=\"todo-list\">\r\n      {items.map((item) => (\r\n        <Item\r\n          key={item.id}\r\n          id={item.id}\r\n          text={item.text}\r\n          checked={item.checked}\r\n        />\r\n      ))}\r\n      <AddItem submitItem={addItem} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import \"./Hero.scss\";\r\n\r\nfunction Hero() {\r\n  return (\r\n    <div className=\"hero-container\">\r\n      <h1>todo üìù</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Hero;\r\n","import \"./App.css\";\nimport List from \"../List/List\";\nimport Hero from \"../Hero/Hero\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Hero />\n      <List />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./Components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}